plugins {
    id 'groovy'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

group 'com.kazurayam'
version '0.4.16'

ext.isReleaseVersion = ! version.endsWith("SNAPSHOT")

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }
tasks.withType(GroovyCompile).each {it.groovyOptions.encoding = defaultEncoding }

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

ext {
    groovyVersion = '2.4.20'   // same version as Katalon Studio 7.9.1
    seleniumjavaVersion = '3.141.59' // same version as Katalon Studio 7.9.1
    junitjupiterVersion = '5.6.0'
    slf4jVersion = '1.7.31'
    commonscodecVersion = '1.15'
    commonsioVersion = '2.8.0'
    webdrivermanager = '4.4.3'
    ashotVersion = '1.5.4'
    javadiffutilsVersion = '4.9'
    gsonVersion = '2.8.9'
    freemarkerVersion = '2.3.31'
    kazurayamFMDirectivesVersion = '0.1.0'
}

dependencies {
    implementation "org.codehaus.groovy:groovy-all:${groovyVersion}"

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: "${slf4jVersion}"

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: "${commonsioVersion}"

    // https://mvnrepository.com/artifact/io.github.java-diff-utils/java-diff-utils
    implementation group: 'io.github.java-diff-utils', name: 'java-diff-utils', version: "${javadiffutilsVersion}"

    implementation group: 'org.freemarker', name: 'freemarker', version: "${freemarkerVersion}"
    implementation group: 'com.kazurayam', name: 'kazurayam_FreeMarker_directives',
            version: "${kazurayamFMDirectivesVersion}"

    implementation "org.seleniumhq.selenium:selenium-java:${seleniumjavaVersion}"

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: "${gsonVersion}"

    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: "${webdrivermanager}"

    // https://mvnrepository.com/artifact/ru.yandex.qatools.ashot/ashot
    implementation group: 'ru.yandex.qatools.ashot', name: 'ashot', version: "${ashotVersion}"

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'

    // https://mvnrepository.com/artifact/com.kazurayam/subprocessj
    implementation group: 'com.kazurayam', name: 'subprocessj', version: '0.1.0'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.14.3'

    testImplementation group: 'com.kazurayam', name: 'ashotwrapper', version: '0.1.0-SNAPSHOT'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitjupiterVersion}"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
}

tasks.withType(GroovyCompile) {
    options.compilerArgs << '-Xlint:unchecked'
}

test {
    useJUnitPlatform()
    //finalizedBy jacocoTestReport
}

task groovydocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from groovydoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        materialstore(MavenPublication) {
            artifact sourcesJar
            artifact groovydocJar
            pom {
                groupId = project.group
                name = project.rootProject.name
                description = 'A Java/Groovy API to store objects (Screenshots, HTML, JSON, XML) collected during End-to-end testings empowered by diffing and reporting tools'
                url = 'https://kazurayam.github.io/materialstore/'
                from components.java
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org.licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kazurayam'
                        name = 'URAYAMA,kazuaki'
                        email = 'kazuaki.urayama@gmail.com'
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/kazurayam/${project.rootProject.name}.git"
                    developerConnection = "scm:git:git@github.com:kazurayam/${project.rootProject.name}.git"
                    url = "https://github.com/kazurayam/${project.rootProject.name}"
                }
            }
        }
    }
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo: snapshotRepo
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : "Unknown user"
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : "Unknown password"
            }
        }
    }
}

signing {
    sign publishing.publications.materialstore
}
// I do not want to sign the SNAPSHOT
tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}


task copyGroovydocToDocsDir(type: Copy) {
    from 'build/docs/groovydoc'
    into 'docs/api'
}
groovydoc.finalizedBy copyGroovydocToDocsDir
